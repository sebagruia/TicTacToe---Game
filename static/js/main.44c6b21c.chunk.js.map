{"version":3,"sources":["confetti.js","components/Square/Square.js","components/Board/Board.js","containers/Game.js","index.js"],"names":["confetti","maxCount","speed","frameInterval","alpha","gradient","start","stop","toggle","pause","resume","togglePause","remove","isPaused","isRunning","startConfetti","stopConfetti","streamingConfetti","pauseConfetti","resumeConfetti","particles","supportsAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","colors","lastFrameTime","Date","now","waveAngle","context","resetParticle","particle","width","height","color","Math","random","length","color2","x","y","diameter","tilt","tiltAngleIncrement","tiltAngle","PI","runAnimation","clearRect","innerWidth","innerHeight","delta","i","sin","cos","splice","updateParticles","x2","y2","beginPath","lineWidth","createLinearGradient","addColorStop","strokeStyle","moveTo","lineTo","stroke","drawParticles","timeout","min","max","callback","setTimeout","canvas","document","getElementById","createElement","setAttribute","body","prepend","addEventListener","getContext","count","temp","push","module","exports","Square","value","onClick","id","squares","calculateWinnerLine","lines","a","b","c","className","winningCombination","markWinnerCombination","Board","generatingSquares","el","squareArray","j","square","key","props","generatingRows","map","Component","Game","handleClick","history","state","current","calculateWinner","xIsNext","setState","stepNumber","jumpTo","step","refresh","Array","fill","checkWinner","status","this","winner","moves","move","desc","class","role","ReactDOM","render"],"mappings":"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","file":"static/js/main.44c6b21c.chunk.js","sourcesContent":["var confetti = {\r\n\tmaxCount: 150,\t\t//set max confetti count\r\n\tspeed: 2,\t\t\t//set the particle animation speed\r\n\tframeInterval: 15,\t//the confetti animation frame interval in milliseconds\r\n\talpha: 1.0,\t\t\t//the alpha opacity of the confetti (between 0 and 1, where 1 is opaque and 0 is invisible)\r\n\tgradient: false,\t//whether to use gradients for the confetti particles\r\n\tstart: null,\t\t//call to start confetti animation (with optional timeout in milliseconds, and optional min and max random confetti count)\r\n\tstop: null,\t\t\t//call to stop adding confetti\r\n\ttoggle: null,\t\t//call to start or stop the confetti animation depending on whether it's already running\r\n\tpause: null,\t\t//call to freeze confetti animation\r\n\tresume: null,\t\t//call to unfreeze confetti animation\r\n\ttogglePause: null,\t//call to toggle whether the confetti animation is paused\r\n\tremove: null,\t\t//call to stop the confetti animation and remove all confetti immediately\r\n\tisPaused: null,\t\t//call and returns true or false depending on whether the confetti animation is paused\r\n\tisRunning: null\t\t//call and returns true or false depending on whether the animation is running\r\n};\r\n\r\n(function () {\r\n\tconfetti.start = startConfetti;\r\n\tconfetti.stop = stopConfetti;\r\n\tconfetti.toggle = toggleConfetti;\r\n\tconfetti.pause = pauseConfetti;\r\n\tconfetti.resume = resumeConfetti;\r\n\tconfetti.togglePause = toggleConfettiPause;\r\n\tconfetti.isPaused = isConfettiPaused;\r\n\tconfetti.remove = removeConfetti;\r\n\tconfetti.isRunning = isConfettiRunning;\r\n\tvar supportsAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\r\n\tvar colors = [\"rgba(30,144,255,\", \"rgba(107,142,35,\", \"rgba(255,215,0,\", \"rgba(255,192,203,\", \"rgba(106,90,205,\", \"rgba(173,216,230,\", \"rgba(238,130,238,\", \"rgba(152,251,152,\", \"rgba(70,130,180,\", \"rgba(244,164,96,\", \"rgba(210,105,30,\", \"rgba(220,20,60,\"];\r\n\tvar streamingConfetti = false;\r\n\tvar animationTimer = null;\r\n\tvar pause = false;\r\n\tvar lastFrameTime = Date.now();\r\n\tvar particles = [];\r\n\tvar waveAngle = 0;\r\n\tvar context = null;\r\n\r\n\tfunction resetParticle(particle, width, height) {\r\n\t\tparticle.color = colors[(Math.random() * colors.length) | 0] + (confetti.alpha + \")\");\r\n\t\tparticle.color2 = colors[(Math.random() * colors.length) | 0] + (confetti.alpha + \")\");\r\n\t\tparticle.x = Math.random() * width;\r\n\t\tparticle.y = Math.random() * height - height;\r\n\t\tparticle.diameter = Math.random() * 10 + 5;\r\n\t\tparticle.tilt = Math.random() * 10 - 10;\r\n\t\tparticle.tiltAngleIncrement = Math.random() * 0.07 + 0.05;\r\n\t\tparticle.tiltAngle = Math.random() * Math.PI;\r\n\t\treturn particle;\r\n\t}\r\n\r\n\tfunction toggleConfettiPause() {\r\n\t\tif (pause)\r\n\t\t\tresumeConfetti();\r\n\t\telse\r\n\t\t\tpauseConfetti();\r\n\t}\r\n\r\n\tfunction isConfettiPaused() {\r\n\t\treturn pause;\r\n\t}\r\n\r\n\tfunction pauseConfetti() {\r\n\t\tpause = true;\r\n\t}\r\n\r\n\tfunction resumeConfetti() {\r\n\t\tpause = false;\r\n\t\trunAnimation();\r\n\t}\r\n\r\n\tfunction runAnimation() {\r\n\t\tif (pause)\r\n\t\t\treturn;\r\n\t\telse if (particles.length === 0) {\r\n\t\t\tcontext.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n\t\t\tanimationTimer = null;\r\n\t\t} else {\r\n\t\t\tvar now = Date.now();\r\n\t\t\tvar delta = now - lastFrameTime;\r\n\t\t\tif (!supportsAnimationFrame || delta > confetti.frameInterval) {\r\n\t\t\t\tcontext.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n\t\t\t\tupdateParticles();\r\n\t\t\t\tdrawParticles(context);\r\n\t\t\t\tlastFrameTime = now - (delta % confetti.frameInterval);\r\n\t\t\t}\r\n\t\t\tanimationTimer = requestAnimationFrame(runAnimation);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction startConfetti(timeout, min, max) {\r\n\t\tvar width = window.innerWidth;\r\n\t\tvar height = window.innerHeight;\r\n\t\twindow.requestAnimationFrame = (function () {\r\n\t\t\treturn window.requestAnimationFrame ||\r\n\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\treturn window.setTimeout(callback, confetti.frameInterval);\r\n\t\t\t\t};\r\n\t\t})();\r\n\t\tvar canvas = document.getElementById(\"confetti-canvas\");\r\n\t\tif (canvas === null) {\r\n\t\t\tcanvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.setAttribute(\"id\", \"confetti-canvas\");\r\n\t\t\tcanvas.setAttribute(\"style\", \"display:block;z-index:999999;pointer-events:none;position:fixed;top:0\");\r\n\t\t\tdocument.body.prepend(canvas);\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t\twindow.addEventListener(\"resize\", function () {\r\n\t\t\t\tcanvas.width = window.innerWidth;\r\n\t\t\t\tcanvas.height = window.innerHeight;\r\n\t\t\t}, true);\r\n\t\t\tcontext = canvas.getContext(\"2d\");\r\n\t\t} else if (context === null)\r\n\t\t\tcontext = canvas.getContext(\"2d\");\r\n\t\tvar count = confetti.maxCount;\r\n\t\tif (min) {\r\n\t\t\tif (max) {\r\n\t\t\t\tif (min === max)\r\n\t\t\t\t\tcount = particles.length + max;\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (min > max) {\r\n\t\t\t\t\t\tvar temp = min;\r\n\t\t\t\t\t\tmin = max;\r\n\t\t\t\t\t\tmax = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcount = particles.length + ((Math.random() * (max - min) + min) | 0);\r\n\t\t\t\t}\r\n\t\t\t} else\r\n\t\t\t\tcount = particles.length + min;\r\n\t\t} else if (max)\r\n\t\t\tcount = particles.length + max;\r\n\t\twhile (particles.length < count)\r\n\t\t\tparticles.push(resetParticle({}, width, height));\r\n\t\tstreamingConfetti = true;\r\n\t\tpause = false;\r\n\t\trunAnimation();\r\n\t\tif (timeout) {\r\n\t\t\twindow.setTimeout(stopConfetti, timeout);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stopConfetti() {\r\n\t\tstreamingConfetti = false;\r\n\t}\r\n\r\n\tfunction removeConfetti() {\r\n\t\t// stop();\r\n\t\tpause = false;\r\n\t\tparticles = [];\r\n\t}\r\n\r\n\tfunction toggleConfetti() {\r\n\t\tif (streamingConfetti)\r\n\t\t\tstopConfetti();\r\n\t\telse\r\n\t\t\tstartConfetti();\r\n\t}\r\n\r\n\tfunction isConfettiRunning() {\r\n\t\treturn streamingConfetti;\r\n\t}\r\n\r\n\tfunction drawParticles(context) {\r\n\t\tvar particle;\r\n\t\tvar x, y, x2, y2;\r\n\t\tfor (var i = 0; i < particles.length; i++) {\r\n\t\t\tparticle = particles[i];\r\n\t\t\tcontext.beginPath();\r\n\t\t\tcontext.lineWidth = particle.diameter;\r\n\t\t\tx2 = particle.x + particle.tilt;\r\n\t\t\tx = x2 + particle.diameter / 2;\r\n\t\t\ty2 = particle.y + particle.tilt + particle.diameter / 2;\r\n\t\t\tif (confetti.gradient) {\r\n\t\t\t\tvar gradient = context.createLinearGradient(x, particle.y, x2, y2);\r\n\t\t\t\tgradient.addColorStop(\"0\", particle.color);\r\n\t\t\t\tgradient.addColorStop(\"1.0\", particle.color2);\r\n\t\t\t\tcontext.strokeStyle = gradient;\r\n\t\t\t} else\r\n\t\t\t\tcontext.strokeStyle = particle.color;\r\n\t\t\tcontext.moveTo(x, particle.y);\r\n\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\tcontext.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateParticles() {\r\n\t\tvar width = window.innerWidth;\r\n\t\tvar height = window.innerHeight;\r\n\t\tvar particle;\r\n\t\twaveAngle += 0.01;\r\n\t\tfor (var i = 0; i < particles.length; i++) {\r\n\t\t\tparticle = particles[i];\r\n\t\t\tif (!streamingConfetti && particle.y < -15)\r\n\t\t\t\tparticle.y = height + 100;\r\n\t\t\telse {\r\n\t\t\t\tparticle.tiltAngle += particle.tiltAngleIncrement;\r\n\t\t\t\tparticle.x += Math.sin(waveAngle) - 0.5;\r\n\t\t\t\tparticle.y += (Math.cos(waveAngle) + particle.diameter + confetti.speed) * 0.5;\r\n\t\t\t\tparticle.tilt = Math.sin(particle.tiltAngle) * 15;\r\n\t\t\t}\r\n\t\t\tif (particle.x > width + 20 || particle.x < -20 || particle.y > height) {\r\n\t\t\t\tif (streamingConfetti && particles.length <= confetti.maxCount)\r\n\t\t\t\t\tresetParticle(particle, width, height);\r\n\t\t\t\telse {\r\n\t\t\t\t\tparticles.splice(i, 1);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmodule.exports = {\r\n\t\tstartConfetti: startConfetti,\r\n\t\tstopConfetti: stopConfetti\r\n\t}\r\n}\r\n)();\r\n\r\n\r\n","import React from 'react';\r\nimport '../Square/Square';\r\n\r\nconst Square = ({ value, onClick, id, squares }) => {\r\n\r\n    // This function returns the indexes of the squares that for the winning combination \r\n    const calculateWinnerLine = (squares) => {\r\n            const lines = [\r\n                [0, 1, 2],\r\n                [3, 4, 5],\r\n                [6, 7, 8],\r\n                [0, 3, 6],\r\n                [1, 4, 7],\r\n                [2, 5, 8],\r\n                [0, 4, 8],\r\n                [2, 4, 6],\r\n            ];\r\n    \r\n            for (let i = 0; i < lines.length; i++) {\r\n                const [a, b, c] = lines[i];\r\n                if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                   return  lines[i];\r\n                }\r\n            }\r\n        \r\n    }\r\n\r\n\r\n  \r\n// This function marks the winning squares\r\n   const markWinnerCombination = ()=>{\r\n    if(calculateWinnerLine(squares)){\r\n       let winningCombination = [...calculateWinnerLine(squares)];\r\n        for(let element of winningCombination){\r\n            if(element===id){\r\n                return 'marked';\r\n            }\r\n       }\r\n       return \"\";\r\n\r\n       }\r\n      \r\n   }\r\n\r\n\r\n    return (\r\n        <button id={id} className={`square btn btn-outline-dark ${markWinnerCombination()}`} onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import React, { Component, Fragment } from 'react';\r\nimport './Board.css';\r\nimport Square from '../Square/Square';\r\n\r\n\r\nclass Board extends Component {\r\n\r\n     generatingSquares = (el)=>{\r\n        let squareArray =[];\r\n        for(let j=el; j<el+3;j++){\r\n            let square = (<Square\r\n                    id ={j}\r\n                    key ={j}\r\n                    squares={this.props.squares}\r\n                    value={this.props.squares[j]}\r\n                    onClick={() => this.props.onClick(j)} />);\r\n                squareArray.push(square);\r\n        }\r\n        return squareArray;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n          const generatingRows = [0,3,6].map((el, i)=>{\r\n                return <div key = {i} className=\"board-row\">\r\n                        {this.generatingSquares(el)}\r\n                    </div>\r\n        })\r\n    \r\n\r\n        return (\r\n            <Fragment>\r\n                {generatingRows}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React, {Component,Fragment} from 'react';\r\nimport '../containers/Game.css';\r\nimport Board from '../components/Board/Board';\r\nimport confetti from '../confetti';\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {\r\n                    squares: Array(9).fill(null)\r\n                }\r\n            ],\r\n            stepNumber:0,\r\n            xIsNext: true,\r\n            checkWinner:false,\r\n            // winningCombination:[]\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = (i) => {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        // const squares = current.squares.slice(); This another solution to copy an array\r\n        const squares = [...current.squares];\r\n        if (this.calculateWinner(squares)) {\r\n            return ;\r\n        }\r\n\r\n        if(squares[i]){\r\n            return\r\n\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            // history: history.concat([{  //the same output is achieved  also with CONCAT\r\n            //     squares: squares // }]),\r\n            history: [...history, { squares }],\r\n           \r\n            stepNumber:history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo = (step)=>{\r\n        this.setState({\r\n            stepNumber:step,\r\n            xIsNext:(step%2)===0\r\n        });\r\n    }\r\n\r\n    // This function restarts the game \r\n    refresh = ()=>{\r\n        this.setState({  \r\n            history: [\r\n            {\r\n                squares: Array(9).fill(null)\r\n            }\r\n        ],\r\n        stepNumber:0,\r\n        xIsNext: true,\r\n        checkWinner:false\r\n    });\r\n        confetti.stopConfetti();\r\n\r\n    }\r\n    \r\n\r\n// This function displays the Winner \r\n    calculateWinner = (squares) => {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = this.calculateWinner(current.squares);\r\n\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                `Go to move # ${move}` :\r\n                `Go to game Start`\r\n\r\n            return (\r\n                <li key={move} class=\"history-li\">\r\n                    <button className=\" jumpTo-button btn btn-outline-dark\" onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n\r\n\r\n            );\r\n\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = `Winner ${winner}`;\r\n            confetti.startConfetti();\r\n        }\r\n        else {\r\n            status = `Next Player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <Fragment>\r\n                \r\n                <div className=\"game\">\r\n                <div className=\"title\">\r\n                    <h1 className=\"game-title\">TicTacToe</h1>\r\n                    <i className=\"fas fa-retweet\" role=\"button\" onClick={this.refresh}></i>\r\n                </div>\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            squares={current.squares}\r\n                            onClick={(i) => this.handleClick(i)}\r\n                            />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div className=\"winner-name\">{status}</div>\r\n                        <ol>{moves}</ol>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from '../src/containers/Game';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}